{"version":3,"sources":["components/Posts/Posts.js","components/Home/Home.js","components/NotFound/NotFound.js","components/Comments/Comments.js","components/SinglePost/SinglePost.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","root","maxWidth","background","minHeight","media","height","title","fontWeight","color","fontSize","id","Posts","props","post","classes","style","margin","width","Card","className","CardContent","Typography","gutterBottom","variant","component","CardActions","to","Button","marginTop","textAlign","size","icon","faAngleDoubleRight","Home","useState","posts","setPosts","useEffect","fetch","then","res","json","data","display","flexWrap","justifyContent","map","key","NotFound","minWidth","paddingTop","paddingBottom","bullet","transform","pos","marginBottom","small","Comments","comment","name","body","email","profile","marginRight","borderRadius","src","alt","Container","SinglePost","userId","useParams","details","setDetails","comments","setComments","profiles","setProfiles","url","results","getProfilePic","profilePic","picture","large","backgroundColor","App","AppBar","position","Toolbar","toolbar","IconButton","edge","menuButton","aria-label","noWrap","path","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.7bf2f8d6.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faAngleDoubleRight } from '@fortawesome/free-solid-svg-icons'\r\nimport { Container } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 345,\r\n    background: '#3333',\r\n    minHeight: 'auto'\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n  title: {\r\n    fontWeight: 'bold',\r\n    color: '#000',\r\n    fontSize: 14\r\n  },\r\n  id: {\r\n    fontSize: 14\r\n  }\r\n});\r\n\r\nconst Posts = (props) => {\r\n\r\n  const {id, title} = props.post\r\n  const classes = useStyles();\r\n\r\n  return (\r\n   \r\n    \r\n    <div  style={{ margin: '10px', width: '25%' }}>\r\n      \r\n        <Card className={classes.root}>\r\n          \r\n            <CardContent>\r\n              <Typography className={classes.id} gutterBottom variant=\"h5\" component=\"h5\">\r\n                Post No : {id}\r\n              </Typography>\r\n              <Typography variant=\"body2\" className={classes.title} color=\"textSecondary\" component=\"p\">\r\n                {title}\r\n              </Typography>\r\n            </CardContent>\r\n         \r\n          <CardActions>\r\n            <Link to={\"/SinglePost/\" + id}>\r\n              <Button style={{marginTop: '100px', textAlign: 'right'}} size=\"small\" variant=\"contained\" color=\"primary\">\r\n                Read More <FontAwesomeIcon icon={faAngleDoubleRight} /> \r\n              </Button>\r\n            </Link>\r\n          </CardActions>\r\n        </Card>\r\n      \r\n    </div>\r\n    \r\n    \r\n  );\r\n};\r\n\r\nexport default Posts;\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport './Home.css'\r\nimport Posts from '../Posts/Posts';\r\n\r\nconst Home = () => {\r\n\r\n  const [posts, setPosts] = useState([]);\r\n  useEffect(() => {\r\n    const url = 'https://jsonplaceholder.typicode.com/posts';\r\n    fetch(url)\r\n      .then(res => res.json())\r\n      .then(data => setPosts(data))\r\n  }, [])\r\n  return (\r\n    <div style={{ display: 'flex', flexWrap: 'wrap', width: '100%', height: 'auto', justifyContent: 'center'}}>\r\n        {\r\n          posts.map(post => <Posts key={post.id} post ={post}></Posts>)\r\n        }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;","import React from 'react';\r\nimport './NotFound.css'\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div className=\"page-not-found\">\r\n      <h1>page not found</h1>\r\n      <h2>404: page error</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Container } from '@material-ui/core';\r\nimport { shadows } from '@material-ui/system';\r\nimport { spacing } from '@material-ui/system';\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n    marginTop: 10,\r\n    paddingTop: 30,\r\n    paddingBottom: 50\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 16,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n  small: {\r\n    textAlign: 'right',\r\n    fontWeight: 'bold',\r\n  }\r\n  \r\n});\r\n\r\nconst Comments = (props) => {\r\n  const { name, email, body } = props.comment;\r\n  const profile = props.profile;\r\n  \r\n  const classes = useStyles();\r\n  return (\r\n    <div style={{ display: 'flex' }}>\r\n      <div style={{marginTop: '25px', marginRight: '5px'}}>\r\n          <img style={{ borderRadius: '50%', width: '50px', height: '50px'}} src={profile} alt=\"\"/>\r\n      </div>\r\n      \r\n        <Card  className={classes.root}>\r\n        <CardContent>\r\n          <Container maxWidth=\"md\" style={{height:'60px'}}>\r\n            <Typography component={Container} className={classes.title} variant=\"\" component=\"h4\" color=\"primary\" gutterBottom>\r\n            {name}\r\n          </Typography>\r\n          \r\n            <Typography variant=\"body2\" component=\"p\">\r\n              {body}\r\n              \r\n            </Typography>\r\n            <Typography variant=\"body2\" className={classes.small} component=\"p\">\r\n              <p><small>Comments...</small></p>\r\n              \r\n            </Typography>\r\n          </Container>\r\n        </CardContent>\r\n\r\n      </Card>\r\n        \r\n    \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Comments;\r\n\r\n// <div>\r\n//           <div style={{margin: '10px', padding: '10px'}}>\r\n//           <h4>{name}</h4>\r\n//           <p><small>{email}</small></p>\r\n//           <pre>\r\n//             {body}\r\n//           </pre>\r\n//           </div>\r\n//       </div>\r\n      ","import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Container } from '@material-ui/core';\r\nimport { shadows } from '@material-ui/system';\r\nimport { spacing } from '@material-ui/system';\r\nimport Comments from '../Comments/Comments';\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 18,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  }\r\n  \r\n});\r\n\r\nconst SinglePost = () => {\r\n\r\n  const { userId } = useParams()\r\n  \r\n  const [details, setDetails] = useState([]);\r\n  const [comments, setComments] = useState([]);\r\n  const [profiles, setProfiles] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const url = `https://jsonplaceholder.typicode.com/posts/${userId}`;\r\n    fetch(url)\r\n      .then(res => res.json())\r\n      .then(data => setDetails(data))\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const url = `https://jsonplaceholder.typicode.com/comments?postId=${userId}`;\r\n    fetch(url)\r\n      .then(res => res.json())\r\n      .then(data => setComments(data))\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const url = \"https://randomuser.me/api/\";\r\n    fetch(url)\r\n      .then(res => res.json())\r\n      .then(data => setProfiles(data.results))\r\n  }, [])\r\n  \r\n const getProfilePic = profiles.map(profilePic => profilePic.picture.large )\r\n\r\n const classes = useStyles();\r\n\r\n  return (\r\n\r\n      <Container  maxWidth=\"md\"  style={{backgroundColor: '#333', height: 'auto'}}>\r\n      \r\n          <Card  className={classes.root}>\r\n          <CardContent>\r\n            <Container maxWidth=\"md\" style={{height:'150px'}}>\r\n              <Typography component={Container} className={classes.title} variant=\"\" component=\"h1\" color=\"primary\" gutterBottom>\r\n                Details Post : {userId}\r\n              </Typography>\r\n              <Typography component={Container} className={classes.title} variant=\"\" component=\"h1\" color=\"primary\" gutterBottom>\r\n              {details.title}\r\n              </Typography>\r\n            \r\n              <Typography variant=\"body2\" component=\"p\">\r\n              {details.body}\r\n              \r\n             </Typography>\r\n            \r\n            </Container>\r\n          </CardContent>\r\n\r\n        </Card>\r\n\r\n        <Container maxWidth=\"sm\">\r\n            {\r\n\r\n          comments.map(comment => <Comments\r\n                      profile={getProfilePic}\r\n                      comment={comment}>\r\n                      </Comments>)\r\n            }\r\n        </Container>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SinglePost;\r\n\r\n\r\n    \r\n\r\n","import React from 'react';\nimport './App.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCoffee } from '@fortawesome/free-solid-svg-icons';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nimport Home from './components/Home/Home';\nimport NotFound from './components/NotFound/NotFound';\nimport Posts from './components/Posts/Posts';\nimport SinglePost from './components/SinglePost/SinglePost';\nimport Comments from './components/Comments/Comments';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { IconButton, AppBar, Toolbar } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\n\n\nfunction App() {\n  const classes = useStyles();\n  return (\n    <div className=\"app\">\n    <div className={classes.root}>\n    <AppBar position=\"static\">\n      <Toolbar className={classes.toolbar}>\n        <IconButton\n          edge=\"start\"\n          className={classes.menuButton}\n          color=\"inherit\"\n          aria-label=\"open drawer\"\n        >\n         \n        </IconButton>\n        <Typography className={classes.title} variant=\"h5\" noWrap>\n        Social Buddy\n        </Typography>\n        <IconButton aria-label=\"search\" color=\"inherit\">\n          \n        </IconButton>\n        <IconButton aria-label=\"display more actions\" edge=\"end\" color=\"inherit\">\n          \n        </IconButton>\n      </Toolbar>\n    </AppBar>\n  </div>\n      \n      <Router>\n        <Switch>\n          <Route path=\"/home\" component={Home}/>\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/singlePost/:userId\" component={SinglePost} />\n          <Route path=\"*\" component={NotFound}/>\n\n        </Switch>\n      \n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}